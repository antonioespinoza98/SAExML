mutate(dam = as.factor(dam))
diseno <- encuesta_mrp %>% group_by(dam) %>%
as_survey_design(weights = fep)
media_est_srvyr <- diseno %>%
group_by(dam) %>%
summarise(media_ingreso = mean(ingreso))
censo_mrp <- censo_mrp <- readRDS("ingreso/datos/censo_mrp1.rds")
pred <- readRDS("ingreso/output/pred.rds")
censo_mrp$pred_ingreso <- pred
ingreso_dam <- censo_mrp %>%
group_by(dam) %>%
summarise(
media_ingreso = mean(pred_ingreso)
)
mapping <- rbind(media_est_srvyr, ingreso_dam)
estim <- c(rep("Directo", 6), rep("XGBoost", 6))
pred <- readRDS("ingreso/output/pred2.rds")
censo_mrp <- censo_mrp <- readRDS("ingreso/datos/censo_mrp1.rds")
pred <- readRDS("ingreso/output/pred2.rds")
censo_mrp$pred_ingreso <- pred
ingreso_dam <- censo_mrp %>%
group_by(dam) %>%
summarise(
media_ingreso = mean(pred_ingreso)
)
mapping <- rbind(media_est_srvyr, ingreso_dam)
estim <- c(rep("Directo", 6), rep("XGBoost", 6))
mapping <- cbind(mapping, estim)
mapping %>%
ggplot(
aes(x = dam,
y = media_ingreso,
col = estim)
) + geom_point(size = 2) + theme_minimal() +
scale_color_manual(values = c("red","green")) +
labs(x = "Dam", y = "Ingreso medio", fill = "Modelo")
modelo <- xgboost(params = list(
objective = "reg:squarederror",
eta = 0.30,
max_depth = 6),
nrounds = 1000,
early_stopping_rounds = 3,
data = encuesta_mrp_m
)
rm(list = ls())
encuesta_mrp <- readRDS("ingreso/datos/encuesta_mrp1.rds")
# Encuesta quitamos ingreso, lp, li y fep
encuesta_mrp <- encuesta_mrp %>%
select(
# -X2016_crops.coverfraction, -X2016_urban.coverfraction,
#      -X2016_gHM, -accessibility, -accessibility_walking_only,
-dam,-area1, -sexo2,-edad2,-edad3, -edad4,-edad5,-anoest2,
-anoest3, -anoest4, -discapacidad1,-etnia1,-lp,-li,-fep,-pobreza) %>%
# mutate(
# dam = recode(dam,
#              "01" = 1,
#              "02" = 2,
#              "03" = 3,
#              "04" = 4,
#              "05" = 5,
#              "06" = 6)) %>%
mutate_if(is.character, as.factor)
# mutate(dam = as.factor(dam))
summary(encuesta_mrp)
modelo <- xgboost(params = list(
objective = "reg:squarederror",
eta = 0.30,
max_depth = 6),
nrounds = 1000,
early_stopping_rounds = 3,
data = encuesta_mrp_m
)
y = encuesta_mrp[,2]
encuesta_mrp_m <- xgb.DMatrix(data = as.matrix(sapply(encuesta_mrp[,-2], as.numeric)), label = as.matrix(sapply(y, as.numeric)))
modelo <- xgboost(params = list(
objective = "reg:squarederror",
eta = 0.30,
max_depth = 6),
nrounds = 1000,
early_stopping_rounds = 3,
data = encuesta_mrp_m
)
censo_mrp <- readRDS("ingreso/datos/censo_mrp1.rds") %>% ungroup() %>%
select( area, sexo, anoest, edad, discapacidad,
F182013_stable_lights, X2016_crops.coverfraction,
X2016_urban.coverfraction, X2016_gHM,
accessibility, accessibility_walking_only,
tiene_alcantarillado, tiene_electricidad,
tiene_acueducto, tiene_gas, eliminar_basura,
tiene_internet, piso_tierra,material_paredes,
material_techo, rezago_escolar, alfabeta,
hacinamiento,tasa_desocupacion
)
censo_mrp1 <- xgb.DMatrix(data = as.matrix(sapply(censo_mrp, as.numeric)))
pred <- predict(modelo, newdata = censo_mrp1)
saveRDS(pred, file = "ingreso/output/pred2.rds")
rm(list = ls())
encuesta_mrp <- readRDS("ingreso/datos/encuesta_mrp1.rds") %>%
select(
# -X2016_crops.coverfraction, -X2016_urban.coverfraction,
#      -X2016_gHM, -accessibility, -accessibility_walking_only,
-area1, -sexo2,-edad2,-edad3, -edad4,-edad5,-anoest2,
-anoest3, -anoest4, -discapacidad1,-etnia1,-lp,-li,-pobreza) %>%
mutate_if(is.character, as.factor) %>%
mutate(dam = as.factor(dam))
diseno <- encuesta_mrp %>% group_by(dam) %>%
as_survey_design(weights = fep)
media_est_srvyr <- diseno %>%
group_by(dam) %>%
summarise(media_ingreso = mean(ingreso))
censo_mrp <- censo_mrp <- readRDS("ingreso/datos/censo_mrp1.rds")
pred <- readRDS("ingreso/output/pred2.rds")
censo_mrp$pred_ingreso <- pred
ingreso_dam <- censo_mrp %>%
group_by(dam) %>%
summarise(
media_ingreso = mean(pred_ingreso)
)
ingreso_dam
mapping <- rbind(media_est_srvyr, ingreso_dam)
estim <- c(rep("Directo", 6), rep("XGBoost", 6))
mapping <- cbind(mapping, estim)
mapping %>%
ggplot(
aes(x = dam,
y = media_ingreso,
col = estim)
) + geom_point(size = 2) + theme_minimal() +
scale_color_manual(values = c("red","green")) +
labs(x = "Dam", y = "Ingreso medio", fill = "Modelo")
rm(list = ls())
encuesta_mrp <- readRDS("ingreso/datos/encuesta_mrp1.rds")
# Encuesta quitamos ingreso, lp, li y fep
encuesta_mrp <- encuesta_mrp %>%
select(
# -X2016_crops.coverfraction, -X2016_urban.coverfraction,
#      -X2016_gHM, -accessibility, -accessibility_walking_only,
-dam,-area1, -sexo2,-edad2,-edad3, -edad4,-edad5,-anoest2,
-anoest3, -anoest4, -discapacidad1,-etnia1,-lp,-li,-fep,-pobreza) %>%
# mutate(
# dam = recode(dam,
#              "01" = 1,
#              "02" = 2,
#              "03" = 3,
#              "04" = 4,
#              "05" = 5,
#              "06" = 6)) %>%
mutate_if(is.character, as.factor)
# mutate(dam = as.factor(dam))
summary(encuesta_mrp)
modelo <- xgboost(params = list(
objective = "reg:squarederror",
eta = 0.30,
lambda = 1,
max_depth = 6),
nrounds = 1000,
# early_stopping_rounds = 3,
data = encuesta_mrp_m
)
y = encuesta_mrp[,2]
encuesta_mrp_m <- xgb.DMatrix(data = as.matrix(sapply(encuesta_mrp[,-2], as.numeric)), label = as.matrix(sapply(y, as.numeric)))
modelo <- xgboost(params = list(
objective = "reg:squarederror",
eta = 0.30,
lambda = 1,
max_depth = 6),
nrounds = 1000,
# early_stopping_rounds = 3,
data = encuesta_mrp_m
)
modelo <- xgboost(params = list(
objective = "reg:squarederror",
eta = 0.30,
lambda = 1,
max_depth = 6),
nrounds = 1000,
# early_stopping_rounds = 3,
data = encuesta_mrp_m
)
censo_mrp <- readRDS("ingreso/datos/censo_mrp1.rds") %>% ungroup() %>%
select( area, sexo, anoest, edad, discapacidad,
F182013_stable_lights, X2016_crops.coverfraction,
X2016_urban.coverfraction, X2016_gHM,
accessibility, accessibility_walking_only,
tiene_alcantarillado, tiene_electricidad,
tiene_acueducto, tiene_gas, eliminar_basura,
tiene_internet, piso_tierra,material_paredes,
material_techo, rezago_escolar, alfabeta,
hacinamiento,tasa_desocupacion
)
censo_mrp1 <- xgb.DMatrix(data = as.matrix(sapply(censo_mrp, as.numeric)))
pred <- predict(modelo, newdata = censo_mrp1)
censo_mrp <- readRDS("ingreso/datos/censo_mrp1.rds") %>% ungroup() %>%
select( area, sexo, anoest, edad, discapacidad,
F182013_stable_lights, X2016_crops.coverfraction,
X2016_urban.coverfraction, X2016_gHM,
accessibility, accessibility_walking_only,
tiene_alcantarillado, tiene_electricidad,
tiene_acueducto, tiene_gas, eliminar_basura,
tiene_internet, piso_tierra,material_paredes,
material_techo, rezago_escolar, alfabeta,
hacinamiento,tasa_desocupacion
)
censo_mrp <- readRDS("ingreso/datos/censo_mrp1.rds") %>% ungroup() %>%
select(dam,area, sexo, anoest, edad, discapacidad,
F182013_stable_lights, X2016_crops.coverfraction,
X2016_urban.coverfraction, X2016_gHM,
accessibility, accessibility_walking_only,
tiene_alcantarillado, tiene_electricidad,
tiene_acueducto, tiene_gas, eliminar_basura,
tiene_internet, piso_tierra,material_paredes,
material_techo, rezago_escolar, alfabeta,
hacinamiento,tasa_desocupacion
)
censo_mrp$pred <- pred
matrix(c(mean(encuesta_mrp$ingreso), mean(censo_mrp$pred)),
ncol = 2, dimnames = list(" " = "media", "Estimación" = c("Encuesta", "Censo") ))
censo_mrp %>% group_by(dam) %>% summarise(ingreso_med = mean(pred))
encuesta_mrp <- readRDS("ingreso/datos/encuesta_mrp1.rds") %>%
select(
# -X2016_crops.coverfraction, -X2016_urban.coverfraction,
#      -X2016_gHM, -accessibility, -accessibility_walking_only,
-area1, -sexo2,-edad2,-edad3, -edad4,-edad5,-anoest2,
-anoest3, -anoest4, -discapacidad1,-etnia1,-lp,-li,-pobreza) %>%
mutate_if(is.character, as.factor) %>%
mutate(dam = as.factor(dam))
diseno <- encuesta_mrp %>% group_by(dam) %>%
as_survey_design(weights = fep)
media_est_srvyr <- diseno %>%
group_by(dam) %>%
summarise(media_ingreso = mean(ingreso))
ingreso_dam <- censo_mrp %>%
group_by(dam) %>%
summarise(
media_ingreso = mean(pred)
)
mapping <- rbind(media_est_srvyr, ingreso_dam)
estim <- c(rep("Directo", 6), rep("XGBoost", 6))
mapping <- cbind(mapping, estim)
mapping %>%
ggplot(
aes(x = dam,
y = media_ingreso,
col = estim)
) + geom_point(size = 2) + theme_minimal() +
scale_color_manual(values = c("red","green")) +
labs(x = "Dam", y = "Ingreso medio", fill = "Modelo")
rm(list = ls())
gc()
cantones <- st_read("ingreso/output/cantones_ajustado_cr.geojson", quiet = TRUE)
# Link dado por el SNIT de Costa Rica
url_wfs <- "https://geos.snitcr.go.cr/be/IGN_5_CO/wfs?"
# Aquí se crea la conexión
bwk_client <- WFSClient$new(
url = url_wfs,
serviceVersion = "2.0.0"
)
as_tibble(bwk_client$getFeatureTypes(pretty = TRUE))
# En esta parte del código se hace el GET request de la información
# En este caso nos interesa extraer la provincia y el cantón.
url <- url_parse(url_wfs)
url$query <- list(
service = "wfs",
request = "GetFeature",
typename = "IGN_5_CO:limitecantonal_5k",
srsName = "EPSG:4326"
)
request <- url_build(url)
regiones <- read_sf(request) |>
select("CÓDIGO_CANTÓN", "PROVINCIA", "CANTÓN")
st_crs(regiones) <- st_crs(4326)
regiones_simplificadas <- ms_simplify(
input = regiones,
keep = 0.05,
keep_shapes = FALSE
)
regiones_simplificadas <- ms_filter_islands(
input = regiones_simplificadas,
min_area = 24000000
)
cantones <- janitor::clean_names(cantones)
write_sf(
obj = regiones_simplificadas, dsn = "ingreso/output/cantones_cr.geojson")
cantones <- st_read("ingreso/output/cantones_cr.geojson", quiet = TRUE)
cantones <- janitor::clean_names(cantones)
cantones <- cantones |>
mutate(
canton = case_match(
canton,
"Puerto Jiménez" ~ "Golfito",
"Monteverde" ~ "Puntarenas",
"Río Cuarto" ~ "Grecia",
.default = canton
),
codigo_canton = case_match(
canton,
"613" ~ "607",
"612" ~ "601",
"216" ~ "203",
.default = canton
)
)
cantones <- cantones |>
summarise(
geometry = st_union(geometry),
.by = c(codigo_canton,provincia, canton)
)
write_sf(obj = cantones, dsn = "ingreso/datos/cantones_ajustado_cr.geojson")
write_sf(obj = cantones,
dsn = "ingreso/datos/cantones_ajustado_cr.geojson")
write_sf(obj = cantones,
dsn = "ingreso/output/cantones_ajustado_cr.geojson")
url$query <- list(
service = "wfs",
request = "GetFeature",
typename = "IGN_5_CO:limitedistrital_5k",
srsName = "EPSG:4326"
)
request <- url_build(url)
regiones <- read_sf(request) |>
select("CÓDIGO_DTA", "PROVINCIA", "CANTÓN", "DISTRITO", "REGIÓN")
st_crs(regiones) <- st_crs(4326)
regiones_simplificadas <- ms_simplify(input = regiones,
keep = 0.05,
keep_shapes = FALSE)
# eliminar la isla del coco
regiones_simplificadas <- ms_filter_islands(input = regiones_simplificadas, min_area = 24000000)
write_sf(obj = regiones_simplificadas,
dsn = "ingreso/output/distritos_cr.geojson")
distritos <- janitor::clean_names(distritos)
distritos <- st_read("ingreso/output/distritos_cr.geojson", quiet = TRUE)
distritos <- janitor::clean_names(distritos)
res <- distritos |>
summarise(geometry = st_union(geometry), .by = region)
write_sf(obj = res, dsn = "ingreso/output/regiones_cr.geojson")
rm(list = ls())
cantones <- st_read("ingreso/output/cantones_ajustado_cr.geojson", quiet = TRUE)
ingreso_cantonal <- readRDS("ingreso/output/ingreso_cantonal.rds")
mapa <- left_join(
x = cantones,
y = ingreso_cantonal,
by = join_by(canton == canton)
)
glimpse(mapa)
mapa_plot <- ggplot(
data = mapa,
mapping = aes(
fill = ingreso_medio
)
) +
geom_sf(color = "white") +
labs(fill = "Ingreso medio") +
scale_fill_viridis_c() +
theme_minimal()
mapa_plot
rm(list = ls())
regiones <- st_read("ingreso/datos/regiones_cr.geojson")
regiones <- st_read("ingreso/output/regiones_cr.geojson")
ingreso_region <- readRDS("ingreso/output/ingreso_region.rds")
mapping <- left_join(
x = regiones,
y = ingreso_region,
by = join_by(region == region)
)
region_plot <- ggplot(
data = mapping,
mapping = aes(
fill = ingreso_medio
)
) +
geom_sf(color = "white") +
labs(fill = "Ingreso medio") +
scale_fill_viridis_c() +
theme_minimal()
region_plot
rm(list = ls())
distritos <- st_read("ingreso/output/distritos_cr.geojson")
rm(list = ls())
censo_mrp <- censo_mrp <- readRDS("ingreso/datos/censo_mrp1.rds")
View(censo_mrp)
censo_mrp <- censo_mrp <- readRDS("ingreso/datos/censo_mrp1.rds")
pred <- readRDS("ingreso/output/pred.rds")
censo_mrp$pred_ingreso <- pred
censo_mrp %>% group_by(distrito) %>%
summarise(media_ingreso = mean(pred))
distritos <- st_read("ingreso/output/distritos_cr.geojson")
ingreso_distrito <- censo_mrp %>% group_by(distrito) %>%
summarise(media_ingreso = mean(pred))
View(ingreso_distrito)
setdiff(ingreso_distrito$distrito, distritos$CÓDIGO_DTA)
setdiff(distritos$CÓDIGO_DTA,ingreso_distrito$distrito)
distritos <- st_read("ingreso/output/distritos_cr.geojson", quiet = TRUE)
glimpse(distritos)
distritos <- janitor::clean_names(distritos)
glimpse(distritos)
distritos %>% filter(distritos %in% c("Canalete","Matambú"))
distritos %>% filter(distritos %in c("Canalete","Matambú"))
distritos %>% filter(distritos %in% c("Canalete","Matambú"))
distritos %>% filter(distritos %in% c("Canalete","Matambú"))
View(distritos)
distritos %>% filter(distrito %in% c("Canalete","Matambú"))
censo_mrp <- censo_mrp <- readRDS("ingreso/datos/censo_mrp1.rds")
censo_mrp %>% filter(distrito == "21308")
ingreso_distrito <- censo_mrp %>% group_by(distrito) %>%
summarise(media_ingreso = mean(pred))
setdiff(distritos$CÓDIGO_DTA,ingreso_distrito$distrito)
pred <- readRDS("ingreso/output/pred.rds")
censo_mrp$pred_ingreso <- pred
ingreso_distrito <- censo_mrp %>% group_by(distrito) %>%
summarise(media_ingreso = mean(pred))
setdiff(distritos$CÓDIGO_DTA,ingreso_distrito$distrito)
distritos <- st_read("ingreso/output/distritos_cr.geojson")
censo_mrp <- censo_mrp <- readRDS("ingreso/datos/censo_mrp1.rds")
pred <- readRDS("ingreso/output/pred.rds")
censo_mrp$pred_ingreso <- pred
ingreso_distrito <- censo_mrp %>% group_by(distrito) %>%
summarise(media_ingreso = mean(pred))
setdiff(distritos$CÓDIGO_DTA,ingreso_distrito$distrito)
View(distritos)
saveRDS(ingreso_distrito, "ingreso/output/ingreso_distrital.rds")
distritos <- st_read("ingreso/output/distritos_cr.geojson")
ingreso_dist <- readRDS("ingreso/output/ingreso_distrital.rds")
distritos <- st_read("ingreso/output/distritos_cr.geojson") %>%
janitor::clean_names()
View(distritos)
ingreso_dist <- readRDS("ingreso/output/ingreso_distrital.rds")
View(ingreso_dist)
mapping <- left_join(
x = distritos,
y = ingreso_dist,
by = join_by(codigo_dta == distrito)
)
ingreso_dist <- readRDS("ingreso/output/ingreso_distrital.rds") %>%
mutate(distrito = as.factor(distrito))
mapping <- left_join(
x = distritos,
y = ingreso_dist,
by = join_by(codigo_dta == distrito)
)
ingreso_dist <- readRDS("ingreso/output/ingreso_distrital.rds") %>%
mutate(distrito = as.numeric(distrito))
mapping <- left_join(
x = distritos,
y = ingreso_dist,
by = join_by(codigo_dta == distrito)
)
ggplot(
data = mapping,
mapping = aes(
fill = ingreso_medio
)
) +
geom_sf(color = "white") +
labs(fill = "Ingreso medio") +
scale_fill_viridis_c() +
theme_minimal()
View(mapping)
ggplot(
data = mapping,
mapping = aes(
fill = media_ingreso
)
) +
geom_sf(color = "white") +
labs(fill = "Ingreso medio") +
scale_fill_viridis_c() +
theme_minimal()
View(mapping)
ingreso_distrito <- censo_mrp %>% group_by(distrito) %>%
summarise(media_ingreso = mean(pred))
ingreso_distrito
censo_mrp <- censo_mrp <- readRDS("ingreso/datos/censo_mrp1.rds")
pred <- readRDS("ingreso/output/pred.rds")
censo_mrp$pred_ingreso <- pred
ingreso_distrito <- censo_mrp %>% group_by(distrito) %>%
summarise(media_ingreso = mean(pred))
ingreso_distrito
rm(list = ls())
encuesta_mrp <- readRDS("ingreso/datos/encuesta_mrp1.rds") %>%
select(
# -X2016_crops.coverfraction, -X2016_urban.coverfraction,
#      -X2016_gHM, -accessibility, -accessibility_walking_only,
-area1, -sexo2,-edad2,-edad3, -edad4,-edad5,-anoest2,
-anoest3, -anoest4, -discapacidad1,-etnia1,-lp,-li,-pobreza) %>%
mutate_if(is.character, as.factor) %>%
mutate(dam = as.factor(dam))
censo_mrp <- censo_mrp <- readRDS("ingreso/datos/censo_mrp1.rds")
pred <- readRDS("ingreso/output/pred2.rds")
censo_mrp$pred_ingreso <- pred
censo_mrp %>%
group_by(dam) %>%
summarise(
media_ingreso = mean(pred)
)
pred <- readRDS("ingreso/output/pred.rds")
censo_mrp <- censo_mrp <- readRDS("ingreso/datos/censo_mrp1.rds")
pred <- readRDS("ingreso/output/pred.rds")
censo_mrp$pred_ingreso <- pred
censo_mrp %>%
group_by(dam) %>%
summarise(
media_ingreso = mean(pred)
)
censo_mrp <- censo_mrp <- readRDS("ingreso/datos/censo_mrp1.rds")
pred <- readRDS("ingreso/output/pred.rds")
censo_mrp$pred_ingreso <- pred
View(censo_mrp)
censo_mrp %>%
group_by(dam) %>%
summarise(
media_ingreso = mean(pred)
)
