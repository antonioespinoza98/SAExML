xgb_test_rmse[i] <-
xgb_untuned$evaluation_log$test_rmse_mean[xgb_untuned$best_iteration]
cat(i, "\n")
}
xgb_train_rmse <- xgb_train_rmse %>%
tibble() %>%
mutate(simulacion = seq(1:1715))
xgb_test_rmse <- xgb_test_rmse %>%
tibble() %>%
mutate(simulacion = seq(1:1715))
xgb_train_rmse %>% ggplot(aes(x = simulacion, y = .)) +
geom_line()
grid[which.min(xgb_train_rmse$.), ]
which.min(xgb_train_rmse$.)
xgb_train_rmse %>% ggplot(aes(x = simulacion, y = .)) +
geom_line() +
geom_vline(xintercept = 34, linetype = 2, col = "red") +
# xlim(215, 300) +
theme_minimal()
xgb_train_rmse %>% ggplot(aes(x = simulacion, y = .)) +
geom_line() +
geom_vline(xintercept = 34, linetype = 2, col = "red") +
xlim(0, 100) +
theme_minimal()
saveRDS(xgb_train_rmse, file = "ingreso/output/xgb_train_rmse_all_redu.rds")
modelo <- xgboost(
booster = "gblinear",
objective = "reg:squarederror",
max_depth = 6,
lambda = 0,
lambda_bias = 0.6,
alpha = 0.75,
nrounds = 1000,
early_stopping_rounds = 3,
data = encuesta_mrp_m
)
ggplot(modelo$evaluation_log, aes(
x = iter,
y = train_rmse
)) + geom_line()
# Valor minimo
modelo$evaluation_log[which.min(modelo$evaluation_log$train_rmse), ]
eval <- modelo$evaluation_log
View(eval)
ggplot(modelo$evaluation_log, aes(
x = iter,
y = train_rmse
)) + geom_line() +
geom_vline(xintercept = 261, col = "red", linetype = 2) + theme_minimal()
saveRDS(modelo, file = "ingreso/output/modelo_redu.rds")
rm(list = ls())
modelo <- readRDS("ingreso/output/modelo_redu.rds")
censo_mrp <- readRDS("ingreso/datos/censo_mrp1.rds") %>% ungroup() %>%
select( area, sexo, anoest, discapacidad, edad,
F182013_stable_lights, X2016_crops.coverfraction,
X2016_urban.coverfraction, X2016_gHM,
accessibility, accessibility_walking_only,
area1, sexo2, edad2, edad3, edad4, edad5, anoest2, anoest3,
anoest4, discapacidad1, etnia1,
tiene_alcantarillado, tiene_electricidad,
tiene_acueducto, tiene_gas, eliminar_basura,
tiene_internet, piso_tierra,material_paredes,
material_techo, rezago_escolar, alfabeta,
hacinamiento,tasa_desocupacion
)
sparse_matrix <- sparse.model.matrix( ~ ., data = censo_mrp)[, -1]
censo_mrp1 <- xgb.DMatrix(data = sparse_matrix)
pred <- predict(modelo, newdata = censo_mrp1)
saveRDS(pred, file = "ingreso/output/pred_redu.rds")
rm(list = ls())
modelo <- readRDS("ingreso/output/modelo_redu.rds")
censo_mrp <- readRDS("ingreso/datos/censo_mrp1.rds") %>% ungroup() %>%
select( area, sexo, anoest, discapacidad, edad,
F182013_stable_lights, X2016_crops.coverfraction,
X2016_urban.coverfraction, X2016_gHM,
accessibility, accessibility_walking_only,
area1, sexo2, edad2, edad3, edad4, edad5, anoest2, anoest3,
anoest4, discapacidad1, etnia1,
tiene_alcantarillado, tiene_electricidad,
tiene_acueducto, tiene_gas, eliminar_basura,
tiene_internet, piso_tierra,material_paredes,
material_techo, rezago_escolar, alfabeta,
hacinamiento,tasa_desocupacion
)
pred <- readRDS("ingreso/output/predu.rds")
pred <- readRDS("ingreso/output/pred_redu.rds")
censo_mrp$pred <- pred
x <- c('tidyverse','survey','srvyr', 'data.table')
lapply(x, require, character.only = TRUE)
encuesta_mrp <- readRDS("ingreso/datos/encuesta_mrp1.rds") %>%
# select(
#   # -X2016_crops.coverfraction, -X2016_urban.coverfraction,
#   #      -X2016_gHM, -accessibility, -accessibility_walking_only,
#        -area1, -sexo2,-edad2,-edad3, -edad4,-edad5,-anoest2,
#        -anoest3, -anoest4, -discapacidad1,-etnia1,-lp,-li,-pobreza) %>%
mutate(
region = recode(dam,
"01" = "Central",
"02" = "Chorotega",
"03" = "Pacífico Central",
"04" = "Brunca",
"05" = "Huetar Caribe",
"06" = "Huetar Norte")) %>%
mutate(region = as.factor(region)) %>%
mutate_if(is.character, as.factor) %>%
mutate(dam = as.factor(dam))
diseno <- encuesta_mrp  %>%
as_survey_design(weights = fep)
media_est_srvyr <- svyby(
~ingreso,
by = ~region,
design = diseno,
svymean
)
confint_int <- confint(svyby(formula = ~ingreso,
by = ~region,
design = diseno,
svymean))
confint_int <- data.table(confint_int, keep.rownames = TRUE)
colnames(confint_int) <- c("region","min_inter", "max_inter")
confint_int$ingreso <- media_est_srvyr$ingreso
censo_mrp <- censo_mrp <- readRDS("ingreso/datos/censo_mrp1.rds") %>%
mutate(
region = recode(dam,
"01" = "Central",
"02" = "Chorotega",
"03" = "Pacífico Central",
"04" = "Brunca",
"05" = "Huetar Caribe",
"06" = "Huetar Norte")) %>%
mutate(region = as.factor(region))
pred <- readRDS("ingreso/output/pred.rds")
censo_mrp$pred_ingreso <- pred
ingreso_dam <- censo_mrp %>%
group_by(region) %>%
summarise(
ingreso = mean(pred_ingreso)
)
mapping <- rbind(media_est_srvyr[,-3], ingreso_dam)
estim <- c(rep("Directo", 6), rep("XGBoost", 6))
mapping <- cbind(mapping, estim)
mapping %>%
ggplot(
aes(x = region,
y = ingreso)
) + geom_point(aes(color = estim),size = 2, position = "jitter") + theme_minimal() +
scale_color_manual(values = c("red","green")) +
labs(x = "Región de planificación", y = "Ingreso medio", col = "Modelo") +
geom_errorbar(data = confint_int,aes(x= region, ymin = min_inter,
ymax = max_inter))
censo_mrp <- censo_mrp <- readRDS("ingreso/datos/censo_mrp1.rds") %>%
mutate(
region = recode(dam,
"01" = "Central",
"02" = "Chorotega",
"03" = "Pacífico Central",
"04" = "Brunca",
"05" = "Huetar Caribe",
"06" = "Huetar Norte")) %>%
mutate(region = as.factor(region))
pred <- readRDS("ingreso/output/pred_redu.rds")
censo_mrp$pred_ingreso <- pred
ingreso_dam <- censo_mrp %>%
group_by(region) %>%
summarise(
ingreso = mean(pred_ingreso)
)
mapping <- rbind(media_est_srvyr[,-3], ingreso_dam)
estim <- c(rep("Directo", 6), rep("XGBoost", 6))
mapping <- cbind(mapping, estim)
mapping %>%
ggplot(
aes(x = region,
y = ingreso)
) + geom_point(aes(color = estim),size = 2, position = "jitter") + theme_minimal() +
scale_color_manual(values = c("red","green")) +
labs(x = "Región de planificación", y = "Ingreso medio", col = "Modelo") +
geom_errorbar(data = confint_int,aes(x= region, ymin = min_inter,
ymax = max_inter))
ingreso_dam
censo_mrp <- censo_mrp <- readRDS("ingreso/datos/censo_mrp1.rds") %>%
mutate(
region = recode(dam,
"01" = "Central",
"02" = "Chorotega",
"03" = "Pacífico Central",
"04" = "Brunca",
"05" = "Huetar Caribe",
"06" = "Huetar Norte")) %>%
mutate(region = as.factor(region))
pred <- readRDS("ingreso/output/pred.rds")
censo_mrp$pred_ingreso <- pred
ingreso_dam <- censo_mrp %>%
group_by(region) %>%
summarise(
ingreso = mean(pred_ingreso)
)
ingreso_dam
View(ingreso_dam)
x <- c('tidyverse','survey','srvyr', 'data.table')
lapply(x, require, character.only = TRUE)
encuesta_mrp <- readRDS("ingreso/datos/encuesta_mrp1.rds") %>%
# select(
#   # -X2016_crops.coverfraction, -X2016_urban.coverfraction,
#   #      -X2016_gHM, -accessibility, -accessibility_walking_only,
#        -area1, -sexo2,-edad2,-edad3, -edad4,-edad5,-anoest2,
#        -anoest3, -anoest4, -discapacidad1,-etnia1,-lp,-li,-pobreza) %>%
mutate(
region = recode(dam,
"01" = "Central",
"02" = "Chorotega",
"03" = "Pacífico Central",
"04" = "Brunca",
"05" = "Huetar Caribe",
"06" = "Huetar Norte")) %>%
mutate(region = as.factor(region)) %>%
mutate_if(is.character, as.factor) %>%
mutate(dam = as.factor(dam))
diseno <- encuesta_mrp  %>%
as_survey_design(weights = fep)
media_est_srvyr <- svyby(
~ingreso,
by = ~region,
design = diseno,
svymean
)
confint_int <- confint(svyby(formula = ~ingreso,
by = ~region,
design = diseno,
svymean))
confint_int <- data.table(confint_int, keep.rownames = TRUE)
colnames(confint_int) <- c("region","min_inter", "max_inter")
confint_int$ingreso <- media_est_srvyr$ingreso
censo_mrp <- censo_mrp <- readRDS("ingreso/datos/censo_mrp1.rds") %>%
mutate(
region = recode(dam,
"01" = "Central",
"02" = "Chorotega",
"03" = "Pacífico Central",
"04" = "Brunca",
"05" = "Huetar Caribe",
"06" = "Huetar Norte")) %>%
mutate(region = as.factor(region))
pred <- readRDS("ingreso/output/pred.rds")
censo_mrp$pred_ingreso <- pred
ingreso_dam <- censo_mrp %>%
group_by(region) %>%
summarise(
ingreso = mean(pred_ingreso)
)
mapping <- rbind(media_est_srvyr[,-3], ingreso_dam)
estim <- c(rep("Directo", 6), rep("XGBoost", 6))
mapping <- cbind(mapping, estim)
mapping %>%
ggplot(
aes(x = region,
y = ingreso)
) + geom_point(aes(color = estim),size = 2, position = "jitter") + theme_minimal() +
scale_color_manual(values = c("red","green")) +
labs(x = "Región de planificación", y = "Ingreso medio", col = "Modelo") +
geom_errorbar(data = confint_int,aes(x= region, ymin = min_inter,
ymax = max_inter))
rm(list = ls())
x <- c('tidyverse','xgboost','gridExtra','caTools','haven','data.table',
'Matrix')
lapply(x, require, character.only = TRUE)
# Encuesta quitamos ingreso, lp, li y fep
encuesta_mrp <- data.table(readRDS("ingreso/datos/encuesta_mrp1.rds")) %>%
select(-dam,-lp,-li,-fep) %>%
mutate_if(is.character, as.factor)
summary(encuesta_mrp)
head(encuesta_mrp)
str(encuesta_mrp)
# Debido a que el XGBoosting solo toma valores numericos, se debe hacer una pequeña transformación para hacerlo funcionar.
sparse_matrix <- sparse.model.matrix(ingreso ~ ., data = encuesta_mrp)[, -1]
y = encuesta_mrp[,2]
encuesta_mrp_m <- xgb.DMatrix(data = sparse_matrix,
label = as.matrix(sapply(y, as.numeric)))
modelo <- readRDS("ingreso/output/modelo.rds")
importancia <- xgb.importance(
model = modelo
)
xgb.ggplot.importance(importancia)
importancia
View(importancia)
importancia %>% ggplot(aes(x = Feature, y = Importance)) +
geom_bar(orientation = "y")
importancia %>% ggplot(aes(y = Importance)) +
geom_bar(orientation = "y")
xgb.ggplot.importance(importancia)
rlang::last_trace()
modelo$nfeatures
set.seed(1998)
options(scipen=999)
# Encuesta quitamos ingreso, lp, li y fep
encuesta_mrp <- data.table(readRDS("ingreso/datos/encuesta_mrp1.rds")) %>%
select(-dam,-lp,-li,-fep) %>%
mutate_if(is.character, as.factor)
summary(encuesta_mrp)
# Encuesta quitamos ingreso, lp, li y fep
encuesta_mrp <- data.table(readRDS("ingreso/datos/encuesta_mrp1.rds")) %>%
select(-dam,-lp,-li,-fep) %>%
mutate_if(is.character, as.factor) %>%
dplyr::rename(
area = area_cat,
sexo = sexo_cat,
anoest = anoest_cat,
discapacidad = discapacidad_cat
)
# Encuesta quitamos ingreso, lp, li y fep
encuesta_mrp <- data.table(readRDS("ingreso/datos/encuesta_mrp1.rds")) %>%
select(-dam,-lp,-li,-fep) %>%
mutate_if(is.character, as.factor) %>%
dplyr::rename(
area_cat = area,
sexo_cat = sexo,
anoest_cat = anoest,
discapacidad_cat = discapacidad
)
summary(encuesta_mrp)
# Debido a que el XGBoosting solo toma valores numericos, se debe hacer una pequeña transformación para hacerlo funcionar.
sparse_matrix <- sparse.model.matrix(ingreso ~ ., data = encuesta_mrp)[, -1]
y = encuesta_mrp[,2]
encuesta_mrp_m <- xgb.DMatrix(data = sparse_matrix,
label = as.matrix(sapply(y, as.numeric)))
modelo <- xgboost(
booster = "gblinear",
objective = "reg:squarederror",
max_depth = 6,
lambda = 0,
lambda_bias = 1,
alpha = 0,
nrounds = 1000,
early_stopping_rounds = 3,
data = encuesta_mrp_m
)
modelo$nfeatures
modelo$feature_names
importancia <- xgb.importance(
model = modelo
)
xgb.ggplot.importance(importancia)
importancia
xgb.plot.tree(model = modelo)
xgb.ggplot.deepness(model = modelo)
xgb.plot.shap(model = modelo)
xgb.plot.shap(model = modelo, data = encuesta_mrp_m)
xgb.plot.shap(model = modelo, data = encuesta_mrp_m)
xgb.plot.shap(model = modelo, data = sparse_matrix)
View(importancia)
importancia
rm(list = ls())
set.seed(1998)
options(scipen=999)
# Encuesta quitamos ingreso, lp, li y fep
encuesta_mrp <- data.table(readRDS("ingreso/datos/encuesta_mrp1.rds")) %>%
select(-dam,-lp,-li,-fep) %>%
mutate_if(is.character, as.factor) %>%
dplyr::rename(
area_cat = area,
sexo_cat = sexo,
anoest_cat = anoest,
discapacidad_cat = discapacidad
)
summary(encuesta_mrp)
head(encuesta_mrp)
str(encuesta_mrp)
# Debido a que el XGBoosting solo toma valores numericos, se debe hacer una pequeña transformación para hacerlo funcionar.
sparse_matrix <- sparse.model.matrix(ingreso ~ ., data = encuesta_mrp)[, -1]
y = encuesta_mrp[,2]
encuesta_mrp_m <- xgb.DMatrix(data = sparse_matrix,
label = as.matrix(sapply(y, as.numeric)))
modelo <- xgboost(
booster = "gbtree",
objective = "reg:squarederror",
max_depth = 6,
lambda = 0,
lambda_bias = 1,
alpha = 0,
nrounds = 1000,
early_stopping_rounds = 3,
data = encuesta_mrp_m
)
modelo <- xgboost(
booster = "gblinear",
objective = "reg:squarederror",
max_depth = 6,
eta = 0.30,
lambda = 0,
# lambda_bias = 1,
alpha = 0,
nrounds = 1000,
early_stopping_rounds = 3,
data = encuesta_mrp_m
)
censo_mrp <- readRDS("ingreso/datos/censo_mrp1.rds") %>% ungroup() %>%
select( area, sexo, anoest, discapacidad, edad,
F182013_stable_lights, X2016_crops.coverfraction,
X2016_urban.coverfraction, X2016_gHM,
accessibility, accessibility_walking_only,
area1, sexo2, edad2, edad3, edad4, edad5, anoest2, anoest3,
anoest4, discapacidad1, etnia1,
tiene_alcantarillado, tiene_electricidad,
tiene_acueducto, tiene_gas, eliminar_basura,
tiene_internet, piso_tierra,material_paredes,
material_techo, rezago_escolar, alfabeta,
hacinamiento,tasa_desocupacion
)
sparse_matrix <- sparse.model.matrix( ~ ., data = censo_mrp)[, -1]
censo_mrp1 <- xgb.DMatrix(data = sparse_matrix)
pred <- predict(modelo, newdata = censo_mrp1)
modelo$feature_names
censo_mrp <- readRDS("ingreso/datos/censo_mrp1.rds") %>% ungroup() %>%
select( area, sexo, anoest, discapacidad, edad,
F182013_stable_lights, X2016_crops.coverfraction,
X2016_urban.coverfraction, X2016_gHM,
accessibility, accessibility_walking_only,
area1, sexo2, edad2, edad3, edad4, edad5, anoest2, anoest3,
anoest4, discapacidad1, etnia1,
tiene_alcantarillado, tiene_electricidad,
tiene_acueducto, tiene_gas, eliminar_basura,
tiene_internet, piso_tierra,material_paredes,
material_techo, rezago_escolar, alfabeta,
hacinamiento,tasa_desocupacion
) %>%
dplyr::rename(
area_cat = area,
sexo_cat = sexo,
anoest_cat = anoest,
discapacidad_cat = discapacidad
)
sparse_matrix <- sparse.model.matrix( ~ ., data = censo_mrp)[, -1]
censo_mrp1 <- xgb.DMatrix(data = sparse_matrix)
pred <- predict(modelo, newdata = censo_mrp1)
x <- c('tidyverse','survey','srvyr', 'data.table')
lapply(x, require, character.only = TRUE)
encuesta_mrp <- readRDS("ingreso/datos/encuesta_mrp1.rds") %>%
# select(
#   # -X2016_crops.coverfraction, -X2016_urban.coverfraction,
#   #      -X2016_gHM, -accessibility, -accessibility_walking_only,
#        -area1, -sexo2,-edad2,-edad3, -edad4,-edad5,-anoest2,
#        -anoest3, -anoest4, -discapacidad1,-etnia1,-lp,-li,-pobreza) %>%
mutate(
region = recode(dam,
"01" = "Central",
"02" = "Chorotega",
"03" = "Pacífico Central",
"04" = "Brunca",
"05" = "Huetar Caribe",
"06" = "Huetar Norte")) %>%
mutate(region = as.factor(region)) %>%
mutate_if(is.character, as.factor) %>%
mutate(dam = as.factor(dam))
diseno <- encuesta_mrp  %>%
as_survey_design(weights = fep)
media_est_srvyr <- svyby(
~ingreso,
by = ~region,
design = diseno,
svymean
)
confint_int <- confint(svyby(formula = ~ingreso,
by = ~region,
design = diseno,
svymean))
confint_int <- data.table(confint_int, keep.rownames = TRUE)
colnames(confint_int) <- c("region","min_inter", "max_inter")
confint_int$ingreso <- media_est_srvyr$ingreso
censo_mrp <- censo_mrp <- readRDS("ingreso/datos/censo_mrp1.rds") %>%
mutate(
region = recode(dam,
"01" = "Central",
"02" = "Chorotega",
"03" = "Pacífico Central",
"04" = "Brunca",
"05" = "Huetar Caribe",
"06" = "Huetar Norte")) %>%
mutate(region = as.factor(region))
censo_mrp$pred_ingreso <- pred
ingreso_dam <- censo_mrp %>%
group_by(region) %>%
summarise(
ingreso = mean(pred_ingreso)
)
mapping <- rbind(media_est_srvyr[,-3], ingreso_dam)
estim <- c(rep("Directo", 6), rep("XGBoost", 6))
mapping <- cbind(mapping, estim)
mapping %>%
ggplot(
aes(x = region,
y = ingreso)
) + geom_point(aes(color = estim),size = 2, position = "jitter") + theme_minimal() +
scale_color_manual(values = c("red","green")) +
labs(x = "Región de planificación", y = "Ingreso medio", col = "Modelo") +
geom_errorbar(data = confint_int,aes(x= region, ymin = min_inter,
ymax = max_inter))
grid <- expand_grid(
lambda = seq(0, 5, 1),
lambda_bias = seq(0, 5, 1),
alpha = seq(0, 5, 1)
)
rm(list = ls())
grid <- expand_grid(
lambda = seq(0, 5, 1),
lambda_bias = seq(0, 5, 1),
alpha = seq(0, 5, 1)
)
grid <- expand_grid(
lambda = seq(0, 10, 1),
lambda_bias = seq(0, 10, 1),
alpha = seq(0, 10, 1)
)
